@page "/agent/edit/{agentId:int}";
@using MRMS_Blazor.Shared.Services;
@using MRMS_Blazor.Shared.CommonSection;
@inject AgentService agentService
@inject NavigationManager navigationManager


<h3>Edit</h3>

@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
@if (currentAgent == null)
{
    <img src="~/Loading.gif" width="100"/>
}
else
{
    <EditForm Model="currentAgent" OnValidSubmit="UpdateAgent">
        <input type="hidden" @bind="currentAgent.AgentId" />
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" class="form-control" id="name" @bind-value="currentAgent.Name">
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" class="form-control" id="email" @bind-value="currentAgent.Email">
        </div>
        <div class="form-group">
            <label for="phone">Phone:</label>
            <input type="text" class="form-control" id="phone" @bind-value="currentAgent.Phone">
        </div>
        <button type="submit" class="btn btn-primary mt-2">Update Agent</button>
    </EditForm>
}
<div class="d-flex mt-4">
    <a class="btn btn-link" href="agentView">Back to list</a>
</div>

@code {
    private Agent currentAgent;
    private string errorMessage;
    [Parameter]
    public int agentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            currentAgent = await agentService.GetAgentByAgentIdAsync(agentId);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task UpdateAgent()
    {
        var response = await agentService.UpdateAgentAsync(currentAgent);

        if (response.IsSuccessStatusCode)
        {
            // success
            Console.WriteLine($"the id of the user is: {response}");
            navigationManager.NavigateTo("agentView");
        }
        else
        {
            // not success
            Console.WriteLine(response);
            errorMessage = $"Failed to add agent: {response.ReasonPhrase}";
        }
    }
}
