@page "/agent/edit/{agentId:int}";
@using MRMS.MAUI.Models;
@using MRMS.MAUI.Services;
@inject NavigationManager navigationManager
@inject AgentService agentService


<h3>Edit</h3>

@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
@if (currentAgent == null)
{
    
}
else
{
    <EditForm Model="currentAgent" OnValidSubmit="UpdateAgent">
        <MudCard>
            <MudCardContent>

                <MudTextField Label="Name" HelperText="Enter Your Full Name"
                          @bind-Value="currentAgent.Name" For="@(() => currentAgent.Name)" />
                <MudTextField Label="Email" Class="mt-3" HelperText="Enter your E-mail Address"
                          @bind-Value="currentAgent.Email" For="@(() => currentAgent.Email)" InputType="InputType.Email" />
                <MudTextField Label="Phone" HelperText="Enter your Phone Number" Class="mt-3"
                          @bind-Value="currentAgent.Phone" For="@(() => currentAgent.Phone)" InputType="InputType.Telephone" />

            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Update</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
}
<div class="d-flex mt-4">
    <a class="btn btn-link" href="agentView">Back to list</a>
</div>

@code {
    private Agent currentAgent;
    private string errorMessage;
    [Parameter]
    public int agentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            currentAgent = await agentService.GetAgentByAgentIdAsync(agentId);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private async Task UpdateAgent()
    {
        var response = await agentService.UpdateAgentAsync(currentAgent);

        if (response.IsSuccessStatusCode)
        {
            // success
            Console.WriteLine($"the id of the user is: {response}");
            navigationManager.NavigateTo("agentView");
        }
        else
        {
            // not success
            Console.WriteLine(response);
            errorMessage = $"Failed to add agent: {response.ReasonPhrase}";
        }
    }
}
