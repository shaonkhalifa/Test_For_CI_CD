@page "/agentView"
@using MRMS.MAUI.Models;
@using MRMS.MAUI.Services;
@inject NavigationManager NavigationManager
@inject AgentService agentService

<h3>AgentView</h3>

<style>
    .small-fab {
        font-size: 0.5rem
    }

    .table-wrapper{
        height: 100vh;
        width: 100%;
        overflow-x: scroll;
        overflow-y: auto;
    }

    .table {
        position: relative;
        border-collapse: collapse;
    }
    .table td {
            white-space: nowrap;
            width : auto;
    }

    .table tbody tr{

    }
    .last-column{
        display: inline-block;
    }
/*    .last-column {
        position: absolute;
        width: auto;
        right: 0;
        top: auto;
        border-top-width: 0px;
        display:inline-block;
    }*/
</style>

<MudMessageBox @ref="mbox" Title="Warning" CancelText="Cancel" Style="width:400px">
    <MessageContent>
        Are you sure to delete?
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error">Delete</MudButton>

    </YesButton>
</MudMessageBox>

@if (agents is null)
{
    <p><em>Loading...</em></p>
}
else if (!agents.Any())
{
    <p>No agents found.</p>
}
else
{
    <div class="d-flex justify-content-end mb-2">
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Size="Size.Small" @onclick='() => NavigationManager.NavigateTo("/AgentAdd")' />
    </div>

    <div class="table-wrapper">
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Phone</th>
                    <th class="last-column">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var agent in agents)
                {
                    <tr>
                        <td>@agent.Name</td>
                        <td>@agent.Email</td>
                        <td>@agent.Phone</td>
                        <td class="last-column">
                            <MudFab IconSize=Size.Small Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Edit" Size="Size.Small" @onclick='() => NavigationManager.NavigateTo($"/agent/edit/{agent.AgentId}")' />
                            <MudFab Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Small" @onclick='() => OnDeleteClicked(agent.AgentId)' />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private IEnumerable<Agent> agents;

    MudMessageBox mbox { get; set; }

    protected override async Task OnInitializedAsync()
    {
        agents = await agentService.GetAgentsAsync();
    }

    private async Task DeleteAgent(int agentId)
    {
        var result = await agentService.DeleteAgentAsync(agentId);

        if (result != null)
        {
            agents = await agentService.GetAgentsAsync();
        }
        else{}
    }

    private async void OnDeleteClicked(int agentId)
    {
        DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true };

        bool? result = await mbox.Show(maxWidth);
        if (result is not null)
        {
            try
            {
                await agentService.DeleteAgentAsync(agentId);
                agents = await agentService.GetAgentsAsync();
            }
            catch (Exception)
            {
               
            }
        }
        StateHasChanged();
    }

}

